// Code generated by stacker -type int -package main_test -filesuffix=_test ; DO NOT EDIT

package main_test

type intStack struct {
	data []int
}

func (s *intStack) Push(v int) {
	s.data = append(s.data, v)
}

func (s *intStack) Pop() (v int, ok bool) {
	if len(s.data) == 0 {
		return v, false
	}
	top := len(s.data) - 1
	v = s.data[top]
	s.data = s.data[:top]
	return v, true
}

func (s *intStack) Peek() (v int, ok bool) {
	if len(s.data) == 0 {
		return v, false
	}
	top := len(s.data) - 1
	v = s.data[top]
	return v, true
}

func (s *intStack) Len() int {
	return len(s.data)
}

func (s *intStack) Walk(f func(int)) {
	for _, v := range s.data {
		f(v)
	}
}

func (s *intStack) Rotate() {
	if len(s.data) == 0 {
		return
	}

	top := len(s.data) - 1
	s.data = append(s.data[top:], s.data[:top]...)
}

func (s *intStack) Unrotate() {
	if len(s.data) == 0 {
		return
	}

	bottom := 0
	s.data = append(s.data[bottom+1:], s.data[bottom])
}
